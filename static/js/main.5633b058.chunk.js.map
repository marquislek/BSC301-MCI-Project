{"version":3,"sources":["logo.svg","cardDeck.js","components/Triangle.jsx","components/Circle.jsx","components/Star.jsx","components/Cross.jsx","components/Symbol.jsx","components/patientCard.jsx","components/testCard.jsx","components/CardSortingTest.jsx","App.js","index.js"],"names":["module","exports","cardDeck","id","number","shape","color","Triangle","props","Color","icon","triangleIcon","style","fontSize","padding","Circle","circleIcon","Star","starIcon","Cross","plusIcon","Symbol","PatientCard","Card","className","height","width","backgroundColor","CardContent","display","onClick","Array","fill","TestCard","useState","temp","setTemp","reset","correct","CardActionArea","console","log","setTimeout","onGuess","CardSortingTest","Shape","Number","patientCard","setPatientCard","currentDeck","testDeck","setTestDeck","noOfTest","criteriaDeck","otherDeck","testCriteria","testDone","shuffleArray","array","i","length","j","Math","floor","random","getTestCriteria","randomNumber","filter","card","nextTest","test","tempDeck","correctCard","map","tempDeckCard","Grid","container","direction","justify","Button","variant","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5633b058.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\n\r\nconst cardDeck = [\r\n  {\r\n    id: 1,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 2,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 3,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 4,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 5,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 6,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 7,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 8,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 9,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 10,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 11,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 12,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 13,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 14,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 15,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 16,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 17,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 18,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 19,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 20,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 21,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 22,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 23,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 24,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 25,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 26,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 27,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 28,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 29,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 30,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 31,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 32,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 33,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 34,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 35,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 36,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 37,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 38,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 39,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 40,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 41,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 42,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 43,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 44,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 45,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 46,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 47,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 48,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 49,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 50,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 51,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 52,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 53,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 54,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 55,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 56,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 57,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 58,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 59,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 60,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 61,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 62,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 63,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 64,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  }\r\n];\r\n\r\nexport default cardDeck;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport triangleIcon from \"@iconify/icons-mdi/triangle\";\r\n\r\nfunction Triangle(props) {\r\n  const Color = props.Color;\r\n\r\n  return (\r\n    <Icon\r\n      icon={triangleIcon}\r\n      style={{ color: Color, fontSize: 50, padding: 4 }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Triangle;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport circleIcon from '@iconify/icons-fa-solid/circle';\r\n\r\n\r\n\r\nfunction Circle(props){\r\n    const Color = props.Color;\r\n\r\n    \r\n    return <Icon icon={circleIcon} style={{ color: Color, fontSize: 50, padding: 3 }}/>\r\n}\r\n\r\nexport default Circle;","import React, { useState } from \"react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport starIcon from \"@iconify/icons-el/star\";\r\n\r\nfunction Star(props) {\r\n  const Color = props.Color;\r\n\r\n  return (\r\n    <Icon icon={starIcon} style={{ color: Color, fontSize: 50, padding: 3 }} />\r\n  );\r\n}\r\n\r\nexport default Star;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport plusIcon from '@iconify/icons-el/plus';\r\n\r\n\r\nfunction Cross(props){\r\n    const Color = props.Color;\r\n\r\n    \r\n    return <Icon icon={plusIcon} style={{ color: Color, fontSize: 50, padding: 3 }} />\r\n}\r\n\r\nexport default Cross;","import React, { useState } from \"react\";\r\nimport Triangle from \"./Triangle\";\r\nimport Circle from \"./Circle\";\r\nimport Star from \"./Star\";\r\nimport Cross from \"./Cross\";\r\n\r\nfunction Symbol(props) {\r\n  \r\n  if (props.shape === \"Star\") {\r\n    return <Star Color={props.color} />;\r\n  } else if (props.shape === \"Cross\") {\r\n    return <Cross Color={props.color} />;\r\n  } else if (props.shape === \"Circle\") {\r\n    return <Circle Color={props.color} />;\r\n  } else {\r\n    return <Triangle Color={props.color} />;\r\n  }\r\n}\r\n\r\nexport default Symbol;\r\n","import React, { useState } from \"react\";\r\nimport Symbol from \"./Symbol\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nfunction PatientCard(props) {\r\n  return (\r\n    <Card className=\"Card\">\r\n      <div\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#ea9abb\" }}\r\n      >\r\n        <CardContent\r\n          style={{\r\n            display: \"block\"\r\n          }}\r\n        >\r\n        {props.onClick}\r\n          {Array(props.number).fill(\r\n            <Symbol shape={props.shape} color={props.color} />\r\n          )}\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PatientCard;\r\n","import React, { useState } from \"react\";\r\nimport Symbol from \"./Symbol\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nfunction TestCard(props) {\r\n  const [temp, setTemp] = useState(\"white\");\r\n\r\n  function reset() {\r\n    setTemp(\"white\");\r\n  }\r\n  const correct = props.correct;\r\n  function changeColor() {\r\n    console.log(\"this is working\");\r\n    console.log(correct);\r\n    correct ? setTemp(\"green\"): setTemp(\"red\");\r\n    setTimeout(reset, 2000);\r\n    \r\n  }\r\n\r\n  return (\r\n    <Card className=\"Card\" style={{ backgroundColor: temp }}>\r\n      <CardActionArea\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#ea9abb\" }}\r\n        onClick={() => (changeColor(), props.onGuess(correct))}\r\n      >\r\n        <CardContent\r\n          style={{\r\n            display: \"block\"\r\n          }}\r\n        >\r\n          {Array(props.number).fill(\r\n            <Symbol shape={props.shape} color={props.color} />\r\n          )}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TestCard;\r\n","import React, { useState } from \"react\";\r\nimport CardDeck from \"../cardDeck\";\r\nimport PatientCard from \"./patientCard\";\r\nimport TestCard from \"./testCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport cardDeck from \"../cardDeck\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nfunction CardSortingTest() {\r\n  const [patientCard, setPatientCard] = useState({\r\n    Shape: \"Circle\",\r\n    Color: \"blue\",\r\n    Number: 1\r\n  });\r\n\r\n  const [currentDeck, setCurrentDeck] = useState(cardDeck);\r\n\r\n  const [testDeck, setTestDeck] = useState([]);\r\n\r\n  const delay = 2000;\r\n  const criteriaDuration = 9;\r\n  let noOfTest = 0;\r\n  let testingCard = {};\r\n  let criteriaDeck = [];\r\n  let otherDeck = [];\r\n  let testCriteria = \"\";\r\n  let testDone = false;\r\n  let testLog = \"\";\r\n  let criteriaCompleted = {\r\n    shapeDone: false,\r\n    colorDone: false,\r\n    numberDone: false\r\n  };\r\n\r\n  function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  }\r\n\r\n  function getTestCriteria() {\r\n    const randomNumber = Math.floor(Math.random() * 64);\r\n    noOfTest = 0;\r\n    switch (Math.floor(Math.random() * 3) + 1) {\r\n      case 1:\r\n        testCriteria = currentDeck[randomNumber].shape;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.shape === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.shape !== testCriteria;\r\n        });\r\n\r\n        break;\r\n      case 2:\r\n        testCriteria = currentDeck[randomNumber].color;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.color === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.color !== testCriteria;\r\n        });\r\n        break;\r\n      default:\r\n        testCriteria = currentDeck[randomNumber].number;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.number === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.number !== testCriteria;\r\n        });\r\n    }\r\n    nextTest();\r\n  }\r\n\r\n  function startTest() {\r\n    getTestCriteria();\r\n  }\r\n\r\n  function test(correct) {\r\n    if (!testDone) {\r\n      testDone = true;\r\n      correct && result();\r\n      noOfTest += 1;\r\n      noOfTest === criteriaDuration\r\n        ? setTimeout(getTestCriteria, delay)\r\n        : setTimeout(nextTest, delay);\r\n    }\r\n  }\r\n\r\n  function result() {\r\n    // if (\r\n    //   event.target.shape === criteriaDeck[1].shape && event.target.color === criteria\r\n    // ){return true}else {\r\n    //   return false;\r\n    // }\r\n  }\r\n\r\n  function nextTest() {\r\n    testDone = false;\r\n    shuffleArray(criteriaDeck);\r\n    shuffleArray(otherDeck);\r\n    const firstCard = {\r\n      correctCard: true,\r\n      shape: criteriaDeck[1].shape,\r\n      color: criteriaDeck[1].color,\r\n      number: criteriaDeck[1].number\r\n    };\r\n    const secondCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[0].shape,\r\n      color: otherDeck[0].color,\r\n      number: otherDeck[0].number\r\n    };\r\n    const thirdCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[1].shape,\r\n      color: otherDeck[1].color,\r\n      number: otherDeck[1].number\r\n    };\r\n    const fourthCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[2].shape,\r\n      color: otherDeck[2].color,\r\n      number: otherDeck[2].number\r\n    };\r\n\r\n    const tempDeck = [firstCard, secondCard, thirdCard, fourthCard];\r\n    shuffleArray(tempDeck);\r\n    setPatientCard({\r\n      Shape: criteriaDeck[0].shape,\r\n      Color: criteriaDeck[0].color,\r\n      Number: criteriaDeck[0].number\r\n    });\r\n    setTestDeck(\r\n      tempDeck.map(tempDeckCard => (\r\n        <TestCard\r\n          onGuess={test}\r\n          correct={tempDeckCard.correctCard}\r\n          shape={tempDeckCard.shape}\r\n          color={tempDeckCard.color}\r\n          number={tempDeckCard.number}\r\n        />\r\n      ))\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Test Cards</h1>\r\n      <Grid\r\n        className=\"testArea\"\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n      >\r\n        {testDeck}\r\n      </Grid>\r\n      <h1>Patient Card</h1>\r\n      <Grid className=\"patientArea\" container direction=\"row\" justify=\"center\">\r\n        <PatientCard\r\n          shape={patientCard.Shape}\r\n          color={patientCard.Color}\r\n          number={patientCard.Number}\r\n        />\r\n        <Button onClick={startTest} variant=\"contained\">\r\n          test\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSortingTest;\r\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\n\nimport CardSortingTest from \"./components/CardSortingTest\";\n\nfunction App() {\n  \n\n  return (\n    <div className=\"App\">\n      <CardSortingTest/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}