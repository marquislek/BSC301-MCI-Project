{"version":3,"sources":["logo.svg","components/IntroductionScreen.jsx","components/Triangle.jsx","components/Circle.jsx","components/Star.jsx","components/Cross.jsx","components/Symbol.jsx","components/patientCard.jsx","components/testCard.jsx","cardDeck.js","components/CardSortingTest.jsx","App.js","index.js"],"names":["module","exports","IntroductionScreen","props","Card","style","backgroundColor","CardContent","color","YouTube","videoId","Button","onClick","changeScreen","variant","Triangle","Color","icon","triangleIcon","fontSize","padding","Circle","circleIcon","Star","starIcon","Cross","plusIcon","Symbol","shape","PatientCard","className","height","width","display","Array","number","fill","TestCard","useState","temp","setTemp","reset","correct","CardActionArea","console","log","setTimeout","onGuess","cardDeck","id","CardSortingTest","currentDeck","noOfTest","criteriaDeck","otherDeck","testCriteria","testDone","randomNumber","Math","floor","random","filter","card","shuffleArray","firstCard","correctCard","secondCard","thirdCard","fourthCard","tempDeck","Shape","Number","patientCard","setPatientCard","map","tempDeckCard","test","testDeck","setTestDeck","array","i","length","j","getTestCriteria","nextTest","Grid","container","direction","justify","App","setScreen","screen","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e91caac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport YouTube from \"react-youtube\";\r\n\r\nfunction IntroductionScreen(props) {\r\n  return (\r\n    <div>\r\n      <Card style={{backgroundColor: \"black\"}}>\r\n        <CardContent style={{color:\"white\"}}>\r\n          Here are the instructions on how to play the game... substitute this\r\n          song with some actual instructions\r\n          <YouTube videoId=\"2UAbZ3LKB_w\" />\r\n        </CardContent>\r\n      </Card>\r\n      <Button onClick={props.changeScreen} variant=\"contained\">\r\n        Start test\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IntroductionScreen;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport triangleIcon from \"@iconify/icons-mdi/triangle\";\r\n\r\nfunction Triangle(props) {\r\n  const Color = props.Color;\r\n\r\n  return (\r\n    <Icon\r\n      icon={triangleIcon}\r\n      style={{ color: Color, fontSize: 50, padding: 4 }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Triangle;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport circleIcon from '@iconify/icons-fa-solid/circle';\r\n\r\n\r\n\r\nfunction Circle(props){\r\n    const Color = props.Color;\r\n\r\n    \r\n    return <Icon icon={circleIcon} style={{ color: Color, fontSize: 50, padding: 3 }}/>\r\n}\r\n\r\nexport default Circle;","import React, { useState } from \"react\";\r\nimport { Icon, InlineIcon } from \"@iconify/react\";\r\nimport starIcon from \"@iconify/icons-el/star\";\r\n\r\nfunction Star(props) {\r\n  const Color = props.Color;\r\n\r\n  return (\r\n    <Icon icon={starIcon} style={{ color: Color, fontSize: 50, padding: 3 }} />\r\n  );\r\n}\r\n\r\nexport default Star;\r\n","import React from \"react\";\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport plusIcon from '@iconify/icons-el/plus';\r\n\r\n\r\nfunction Cross(props){\r\n    const Color = props.Color;\r\n\r\n    \r\n    return <Icon icon={plusIcon} style={{ color: Color, fontSize: 50, padding: 3 }} />\r\n}\r\n\r\nexport default Cross;","import React, { useState } from \"react\";\r\nimport Triangle from \"./Triangle\";\r\nimport Circle from \"./Circle\";\r\nimport Star from \"./Star\";\r\nimport Cross from \"./Cross\";\r\n\r\nfunction Symbol(props) {\r\n  \r\n  if (props.shape === \"Star\") {\r\n    return <Star Color={props.color} />;\r\n  } else if (props.shape === \"Cross\") {\r\n    return <Cross Color={props.color} />;\r\n  } else if (props.shape === \"Circle\") {\r\n    return <Circle Color={props.color} />;\r\n  } else {\r\n    return <Triangle Color={props.color} />;\r\n  }\r\n}\r\n\r\nexport default Symbol;\r\n","import React, { useState } from \"react\";\r\nimport Symbol from \"./Symbol\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nfunction PatientCard(props) {\r\n  return (\r\n    <Card className=\"Card\">\r\n      <div\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#ea9abb\" }}\r\n      >\r\n        <CardContent\r\n          style={{\r\n            display: \"block\"\r\n          }}\r\n        >\r\n        {props.onClick}\r\n          {Array(props.number).fill(\r\n            <Symbol shape={props.shape} color={props.color} />\r\n          )}\r\n        </CardContent>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default PatientCard;\r\n","import React, { useState } from \"react\";\r\nimport Symbol from \"./Symbol\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\n\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nfunction TestCard(props) {\r\n  const [temp, setTemp] = useState(\"white\");\r\n\r\n  function reset() {\r\n    setTemp(\"white\");\r\n  }\r\n  const correct = props.correct;\r\n  function changeColor() {\r\n    console.log(\"this is working\");\r\n    console.log(correct);\r\n    correct ? setTemp(\"green\"): setTemp(\"red\");\r\n    setTimeout(reset, 2000);\r\n    \r\n  }\r\n\r\n  return (\r\n    <Card className=\"Card\" style={{ backgroundColor: temp }}>\r\n      <CardActionArea\r\n        style={{ height: \"100%\", width: \"100%\", backgroundColor: \"#ea9abb\" }}\r\n        onClick={() => (changeColor(), props.onGuess(correct))}\r\n      >\r\n        <CardContent\r\n          style={{\r\n            display: \"block\"\r\n          }}\r\n        >\r\n          {Array(props.number).fill(\r\n            <Symbol shape={props.shape} color={props.color} />\r\n          )}\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default TestCard;\r\n","import React from \"react\";\r\n\r\nconst cardDeck = [\r\n  {\r\n    id: 1,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 2,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 3,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 4,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 5,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 6,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 7,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 8,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 9,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 10,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 11,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 12,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 13,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 14,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 15,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 16,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"green\"\r\n  },\r\n  {\r\n    id: 17,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 18,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 19,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 20,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 21,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 22,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 23,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 24,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 25,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 26,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 27,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 28,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 29,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 30,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 31,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 32,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"yellow\"\r\n  },\r\n  {\r\n    id: 33,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 34,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 35,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 36,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 37,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 38,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 39,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 40,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 41,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 42,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 43,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 44,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 45,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 46,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 47,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 48,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"blue\"\r\n  },\r\n  {\r\n    id: 49,\r\n    number: 1,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 50,\r\n    number: 2,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 51,\r\n    number: 3,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 52,\r\n    number: 4,\r\n    shape: \"Circle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 53,\r\n    number: 1,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 54,\r\n    number: 2,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 55,\r\n    number: 3,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 56,\r\n    number: 4,\r\n    shape: \"Cross\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 57,\r\n    number: 1,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 58,\r\n    number: 2,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 59,\r\n    number: 3,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 60,\r\n    number: 4,\r\n    shape: \"Triangle\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 61,\r\n    number: 1,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 62,\r\n    number: 2,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 63,\r\n    number: 3,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  },\r\n  {\r\n    id: 64,\r\n    number: 4,\r\n    shape: \"Star\",\r\n    color: \"red\"\r\n  }\r\n];\r\n\r\nexport default cardDeck;\r\n","import React, { useState } from \"react\";\r\nimport PatientCard from \"./patientCard\";\r\nimport TestCard from \"./testCard\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport cardDeck from \"../cardDeck\";\r\n\r\nfunction CardSortingTest(props) {\r\n  const currentDeck = cardDeck;\r\n\r\n  const delay = 2000;\r\n  const criteriaDuration = 9;\r\n  let noOfTest = 0;\r\n\r\n  let criteriaDeck = [];\r\n  let otherDeck = [];\r\n  let testCriteria = \"\";\r\n  let testDone = false;\r\n\r\n  let randomNumber = Math.floor(Math.random() * 64);\r\n  switch (Math.floor(Math.random() * 3) + 1) {\r\n    case 1:\r\n      testCriteria = currentDeck[randomNumber].shape;\r\n      criteriaDeck = currentDeck.filter(card => {\r\n        return card.shape === testCriteria;\r\n      });\r\n      otherDeck = currentDeck.filter(card => {\r\n        return card.shape !== testCriteria;\r\n      });\r\n\r\n      break;\r\n    case 2:\r\n      testCriteria = currentDeck[randomNumber].color;\r\n      criteriaDeck = currentDeck.filter(card => {\r\n        return card.color === testCriteria;\r\n      });\r\n      otherDeck = currentDeck.filter(card => {\r\n        return card.color !== testCriteria;\r\n      });\r\n      break;\r\n    default:\r\n      testCriteria = currentDeck[randomNumber].number;\r\n      criteriaDeck = currentDeck.filter(card => {\r\n        return card.number === testCriteria;\r\n      });\r\n      otherDeck = currentDeck.filter(card => {\r\n        return card.number !== testCriteria;\r\n      });\r\n  }\r\n  shuffleArray(criteriaDeck);\r\n  shuffleArray(otherDeck);\r\n  let firstCard = {\r\n    correctCard: true,\r\n    shape: criteriaDeck[1].shape,\r\n    color: criteriaDeck[1].color,\r\n    number: criteriaDeck[1].number\r\n  };\r\n  let secondCard = {\r\n    correctCard: false,\r\n    shape: otherDeck[0].shape,\r\n    color: otherDeck[0].color,\r\n    number: otherDeck[0].number\r\n  };\r\n  let thirdCard = {\r\n    correctCard: false,\r\n    shape: otherDeck[1].shape,\r\n    color: otherDeck[1].color,\r\n    number: otherDeck[1].number\r\n  };\r\n  let fourthCard = {\r\n    correctCard: false,\r\n    shape: otherDeck[2].shape,\r\n    color: otherDeck[2].color,\r\n    number: otherDeck[2].number\r\n  };\r\n\r\n  let tempDeck = [firstCard, secondCard, thirdCard, fourthCard];\r\n  shuffleArray(tempDeck);\r\n  const [patientCard, setPatientCard] = useState({\r\n    Shape: criteriaDeck[0].shape,\r\n    Color: criteriaDeck[0].color,\r\n    Number: criteriaDeck[0].number\r\n  });\r\n  const [testDeck, setTestDeck] = useState(\r\n    tempDeck.map(tempDeckCard => (\r\n      <TestCard\r\n        onGuess={test}\r\n        correct={tempDeckCard.correctCard}\r\n        shape={tempDeckCard.shape}\r\n        color={tempDeckCard.color}\r\n        number={tempDeckCard.number}\r\n      />\r\n    ))\r\n  );\r\n\r\n  function shuffleArray(array) {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * (i + 1));\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n    }\r\n  }\r\n\r\n  function getTestCriteria() {\r\n    randomNumber = Math.floor(Math.random() * 64);\r\n    noOfTest = 0;\r\n    switch (Math.floor(Math.random() * 3) + 1) {\r\n      case 1:\r\n        testCriteria = currentDeck[randomNumber].shape;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.shape === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.shape !== testCriteria;\r\n        });\r\n\r\n        break;\r\n      case 2:\r\n        testCriteria = currentDeck[randomNumber].color;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.color === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.color !== testCriteria;\r\n        });\r\n        break;\r\n      default:\r\n        testCriteria = currentDeck[randomNumber].number;\r\n        criteriaDeck = currentDeck.filter(card => {\r\n          return card.number === testCriteria;\r\n        });\r\n        otherDeck = currentDeck.filter(card => {\r\n          return card.number !== testCriteria;\r\n        });\r\n    }\r\n    nextTest();\r\n  }\r\n\r\n  function nextTest() {\r\n    testDone = false;\r\n    shuffleArray(criteriaDeck);\r\n    shuffleArray(otherDeck);\r\n    firstCard = {\r\n      correctCard: true,\r\n      shape: criteriaDeck[1].shape,\r\n      color: criteriaDeck[1].color,\r\n      number: criteriaDeck[1].number\r\n    };\r\n    secondCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[0].shape,\r\n      color: otherDeck[0].color,\r\n      number: otherDeck[0].number\r\n    };\r\n    thirdCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[1].shape,\r\n      color: otherDeck[1].color,\r\n      number: otherDeck[1].number\r\n    };\r\n    fourthCard = {\r\n      correctCard: false,\r\n      shape: otherDeck[2].shape,\r\n      color: otherDeck[2].color,\r\n      number: otherDeck[2].number\r\n    };\r\n\r\n    tempDeck = [firstCard, secondCard, thirdCard, fourthCard];\r\n    shuffleArray(tempDeck);\r\n    setPatientCard({\r\n      Shape: criteriaDeck[0].shape,\r\n      Color: criteriaDeck[0].color,\r\n      Number: criteriaDeck[0].number\r\n    });\r\n    setTestDeck(\r\n      tempDeck.map(tempDeckCard => (\r\n        <TestCard\r\n          onGuess={test}\r\n          correct={tempDeckCard.correctCard}\r\n          shape={tempDeckCard.shape}\r\n          color={tempDeckCard.color}\r\n          number={tempDeckCard.number}\r\n        />\r\n      ))\r\n    );\r\n  }\r\n\r\n  function test(correct) {\r\n    if (!testDone) {\r\n      testDone = true;\r\n      correct && result();\r\n      noOfTest += 1;\r\n      noOfTest === criteriaDuration\r\n        ? setTimeout(getTestCriteria, delay)\r\n        : setTimeout(nextTest, delay);\r\n    }\r\n  }\r\n\r\n  function result() {\r\n    // if (\r\n    //   event.target.shape === criteriaDeck[1].shape && event.target.color === criteria\r\n    // ){return true}else {\r\n    //   return false;\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Test Cards</h1>\r\n      <Grid\r\n        className=\"testArea\"\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n      >\r\n        {testDeck}\r\n      </Grid>\r\n      <h1>Patient Card</h1>\r\n      <Grid className=\"patientArea\" container direction=\"row\" justify=\"center\">\r\n        <PatientCard\r\n          shape={patientCard.Shape}\r\n          color={patientCard.Color}\r\n          number={patientCard.Number}\r\n        />\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSortingTest;\r\n","import React, { useState } from \"react\";\nimport { Route, NavLink, HashRouter } from \"react-router-dom\";\nimport logo from \"./logo.svg\";\n\nimport IntroductionScreen from \"./components/IntroductionScreen\";\nimport CardSortingTest from \"./components/CardSortingTest\";\n\nfunction App() {\n\n  const [screen, setScreen] = useState(<IntroductionScreen changeScreen={changeAppScreen} />);\n\n  function changeAppScreen() {\n    setScreen(<CardSortingTest/>);\n  }\n  return (\n    <div className=\"App\">\n      {screen}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}